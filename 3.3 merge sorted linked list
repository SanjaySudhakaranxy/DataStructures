#include <stdio.h>
#include <stdlib.h>

// Define a structure for a node in the linked list
struct Node {
    int data;
    struct Node* next;
}*head,*tail,*n;

// Function to insert a node at the end of the linked list
void insertNode(struct Node** head_ref, int num)
{
    struct Node* n = (struct Node*)malloc(sizeof(struct Node));
    struct Node* last = *head_ref;

    n->data = num;
    n->next = NULL;

    if (*head_ref == NULL)
    {
        *head_ref = n;
        return;
    }

    while (last->next != NULL)
        last = last->next;

    last->next = n;
}

// Function to merge two sorted linked lists
struct Node* merge(struct Node* list1, struct Node* list2)
{
    if (list1 == NULL)
        return list2;
    if (list2 == NULL)
        return list1;

    struct Node* merged = NULL;

    if (list1->data <= list2->data)
    {
        merged = list1;
        merged->next = merge(list1->next, list2);
    }
    else
    {
        merged = list2;
        merged->next = merge(list1, list2->next);
    }

    return merged;
}

void printList(struct Node* node)
{
    while (node != NULL)
    {
        printf("%d ", node->data);
        node = node->next;
    }
    printf("\n");
}

int main()
{
    printf("MERGE TWO SORTED LINKED LIST\n");
    printf("TANUJA P ,192321052\n");
    struct Node* list1 = NULL;
    struct Node* list2 = NULL;

    insertNode(&list1, 1);
    insertNode(&list1, 3);
    insertNode(&list1, 5);

    insertNode(&list2, 2);
    insertNode(&list2, 4);
    insertNode(&list2, 6);

    printf("First sorted list: ");
    printList(list1);

    printf("Second sorted list: ");
    printList(list2);

    struct Node* merged = merge(list1, list2);

    printf("Merged sorted list: ");
    printList(merged);

    return 0;
}
