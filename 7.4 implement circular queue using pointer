#include <stdio.h>
#include <stdlib.h>

// Node structure to represent a circular queue node
struct Node
{
    int data;
    struct Node* next;
}*rear,*n;

void Enqueue(int value)
{
    n = (struct Node*)malloc(sizeof(struct Node));
    n->data = value;

    if (rear==NULL)
    {
        n->next = n;
        rear = n;
    }
    else
    {
        n->next = rear->next;
        rear->next = n;
        rear = n;
    }
    printf("Enqueued %d into the circular queue\n", value);
}

void Dequeue()
{
    if (rear==NULL)
    {
        printf("Queue is empty. Cannot dequeue item.\n");
        return;
    }

    struct Node* t = rear->next;
    int removedItem = t->data;

    if (t == rear)
    {
        free(t);
        rear = NULL;
    }
    else
    {
        rear->next = t->next;
        free(t);
    }

    printf("Dequeued %d from the circular queue\n", removedItem);
}



void Display()
{
    if (rear==NULL)
    {
        printf("Queue is empty.\n");
        return;
    }

    struct Node* current = rear->next;
    printf("Circular Queue elements: ");
    do
    {
        printf("%d ", current->data);
        current = current->next;
    }
    while (current != rear->next);
    printf("\n");
}

int Front()
{
    if (rear==NULL)
    {
        printf("Queue is empty.\n");
        return -1;
    }
    return rear->next->data;
}

int Rear()
{
    if (rear==NULL)
    {
        printf("Queue is empty.\n");
        return -1;
    }
    return rear->data;
}

int main()
{
    printf("IMPLEMENT CIRCULAR QUEUE USING POINTER\n");
    printf("TANUJA P ,192321052\n");
    printf("--------------------------------\n");
    int choice, item;
    while (1)
    {
        printf("\nCircular Queue Operations:\n");
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Display\n");
        printf("4. Front\n");
        printf("5. Rear\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");

        scanf("%d", &choice);

        switch (choice)
        {
            case 1:
                printf("Enter value to enqueue: ");
                scanf("%d", &item);
                Enqueue(item);
                break;
            case 2:
                Dequeue();
                break;
            case 3:
                Display();
                break;
            case 4:
                printf("Front element: %d\n", Front());
                break;
            case 5:
                printf("Rear element: %d\n", Rear());
                break;
            case 6:
                printf("Exiting...\n");
                exit(0);
            default:
                printf("Invalid choice! Please enter a valid menu option.\n");
        }
    }

    return 0;
}
